{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/CharacterCard/index.js","components/Characters/index.js","components/Navbar/index.js","components/Instructions/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Title","CharacterCard","key","character","onClick","handleClick","id","alt","name","src","image","Characters","characters","map","components_CharacterCard","Navbar","currentScoreClicks","Instructions","Fragment","App","state","clicked","currentScore","_this","indexOf","setState","concat","handleShuffle","handleGameOver","shuffledCharacters","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","handleReset","alert","handleCurrentScore","components_Navbar","this","components_Wrapper","components_Title","components_Instructions","components_Characters","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"43CAOeA,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBJ,EAAMK,iBCGpCC,MAJf,SAAeN,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMK,WCkBvBE,eAnBO,SAAAP,GAEpB,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVI,IAAKR,EAAMS,UAAUD,IACrBE,QAAS,kBAAMV,EAAMW,YAAYX,EAAMS,UAAUG,MAE/CX,EAAAC,EAAAC,cAAA,OACAC,UAAU,iBAENH,EAAAC,EAAAC,cAAA,OACAU,IAAKb,EAAMS,UAAUK,KACrBC,IAAKf,EAAMS,UAAUO,YCElBC,EAfI,SAAAjB,GACf,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXJ,EAAMkB,WAAWC,IAAI,SAAAV,GAAS,OAC9BR,EAAAC,EAAAC,cAACiB,EAAD,CACEZ,IAAKC,EAAUG,GACfA,GAAIH,EAAUG,GACdH,UAAWA,EACXE,YAAaX,EAAMW,kBCAdU,EATA,SAAArB,GAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,kBAAwDJ,EAAMsB,8BCKvDC,MARf,SAAsBvB,GACpB,OAAOC,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,CAAgBpB,UAAU,gBAC/BH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,gECyFWsB,6MAlEZC,MAAQ,CACPR,WAAYA,EACZS,QAAS,GACTC,aAAc,KAGhBjB,YAAc,SAAAC,IAC4B,IAApCiB,EAAKH,MAAMC,QAAQG,QAAQlB,IAG7BiB,EAAKE,SAAS,CAAEJ,QAASE,EAAKH,MAAMC,QAAQK,OAAOpB,KACnDiB,EAAKI,iBAGLJ,EAAKK,oBAITD,cAAgB,WACd,IAAIE,EAxCR,SAAiBjB,GAIf,IAHA,IAAsCkB,EAAgBC,EAAlDC,EAAepB,EAAWqB,OAGvB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBlB,EAHjBoB,GAAgB,GAIhBpB,EAAWoB,GAAgBpB,EAAWmB,GACtCnB,EAAWmB,GAAeD,EAG5B,OAAOlB,EAwBoByB,CAAQd,EAAKH,MAAMR,YAC5CW,EAAKE,SAAS,CACZb,WAAYiB,OAIhBD,eAAiB,WACfL,EAAKe,cACLC,MAAM,aACNhB,EAAKI,mBAGPW,YAAc,WACZf,EAAKE,SAAS,CACZJ,QAAS,GACTC,aAAc,OAIlBkB,mBAAqB,WAKnB,OAJkC,KAA9BjB,EAAKH,MAAMC,QAAQY,SACrBM,MAAM,YACNhB,EAAKe,eAEAf,EAAKH,MAAMC,QAAQY,gFAK1B,OACEtC,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACEvB,EAAAC,EAAAC,cAAC4C,EAAD,CACAzB,mBAAqB0B,KAAKF,qBAE1B7C,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,qBACAjD,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAACiD,EAAD,CACAlC,WAAY8B,KAAKtB,MAAMR,WACvBP,YAAaqC,KAAKrC,uBA5DV0C,aCvBlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.99f21343.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper container\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst CharacterCard = props => {\r\n\r\n  return (\r\n    <div \r\n      className=\"card\" \r\n      key={props.character.key} \r\n      onClick={() => props.handleClick(props.character.id)}\r\n      >\r\n        <div \r\n        className=\"img-container\"\r\n        >\r\n            <img \r\n            alt={props.character.name} \r\n            src={props.character.image} />\r\n        </div>\r\n      </div>\r\n  )\r\n};\r\n \r\nexport default CharacterCard;","import React from 'react';\r\nimport CharacterCard from \"../CharacterCard\";\r\n\r\nconst Characters = props => {\r\n    return (\r\n    <div className=\"container justify-content-center\">\r\n      { props.characters.map(character => (\r\n        <CharacterCard \r\n          key={character.id} \r\n          id={character.id} \r\n          character={character}\r\n          handleClick={props.handleClick}\r\n        />\r\n      ))}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Characters;","import React from 'react';\r\n\r\nconst Navbar = props => {\r\n\r\n  return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <span className=\"navbar-brand mb-0 h1\">Current Score: { props.currentScoreClicks() }</span>\r\n      </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Instructions(props) {\n  return <React.Fragment className=\"instructions\">\n    <h4>Instructions: </h4>\n    <h4>Click the portrait of each character to win.</h4>\n    <h4>Don't click the same character twice!</h4>\n    </React.Fragment>\n}\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport './App.css';\nimport Characters from \"./components/Characters\";\nimport Navbar from './components/Navbar';\nimport Instructions from './components/Instructions';\nimport characters from \"./characters.json\";\n\nfunction shuffle(characters) {\n  var currentIndex = characters.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = characters[currentIndex];\n    characters[currentIndex] = characters[randomIndex];\n    characters[randomIndex] = temporaryValue;\n  }\n\n  return characters;\n}\n\nclass App extends Component {\n  \n   state = { \n    characters: characters,\n    clicked: [],\n    currentScore: 0\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      //Looks up the character ID in the state.clicked, if it's not present then it continues\n      // Cannot push into a state array, so concat cleanly makes a new array to play with\n      this.setState({ clicked: this.state.clicked.concat(id) });\n      this.handleShuffle();\n    } else {\n      // User loses\n      this.handleGameOver();\n    }\n  };\n\n  handleShuffle = () => {\n    let shuffledCharacters = shuffle(this.state.characters);\n    this.setState({\n      characters: shuffledCharacters\n    })\n  }\n\n  handleGameOver = () => {\n    this.handleReset();\n    alert(\"You Lose!\")\n    this.handleShuffle();\n  }\n\n  handleReset = () => {\n    this.setState({\n      clicked: [],\n      currentScore: 0,\n    });\n  }\n\n  handleCurrentScore = () => {\n    if (this.state.clicked.length === 12) {\n      alert(\"You Win!\");\n      this.handleReset();\n    }\n    return this.state.clicked.length;\n    \n  }\n\n  render() { \n    return (\n      <React.Fragment>\n        <Navbar \n        currentScoreClicks={ this.handleCurrentScore }\n        />\n        <Wrapper>\n          <Title>Clicky Game!</Title>\n          <Instructions></Instructions>\n          <Characters \n          characters={this.state.characters}\n          handleClick={this.handleClick}/>\n        </Wrapper>\n      </React.Fragment>\n      \n     );\n  };\n};\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}